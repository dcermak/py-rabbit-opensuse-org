---
name: CI

on:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  format:
    name: Ensure code is properly formatted
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: '3.x'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}

      - run: |
          pip install --upgrade poetry
          poetry install
          poetry run ruff format --check --diff .

  lint:
    name: Lint the source code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: '3.x'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}

      - run: |
          pip install --upgrade poetry
          poetry install

      - run: poetry run ruff check .

      - run: poetry run mypy --strict src/

  documentation:
    name: Build the documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: '3.x'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}

      - run: |
          pip install --upgrade poetry
          poetry install

      - run: poetry run sphinx-build -M html source build -W

      - name: upload the build directory
        uses: actions/upload-artifact@v5
        with:
          name: build
          path: ./build/html

  deploy:
    name: deploy to the gh-pages branch
    runs-on: ubuntu-latest
    needs: documentation
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          name: build
          path: ./build

      - run: touch ./build/.nojekyll

      - name: deploy to github pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: build

  build:
    name: Build the package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}

      - name: Run the build
        run: |
          pipx install poetry
          poetry install
          poetry build

      - uses: actions/upload-artifact@v5
        with:
          name: wheel
          path: dist/py_rodo*whl
          if-no-files-found: error

  install:
    name: Install the package
    runs-on: "ubuntu-latest"
    needs: build
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python_version }}

      - uses: actions/download-artifact@v5
        with:
          name: wheel
          path: dist

      - name: install the wheel
        run: pip install --user dist/py_rodo*whl

      - name: run a smoke test that the package has been installed
        run: python -c "import py_rodo; print (py_rodo.__name__)"
